version: "3.8"

# Global logging configuration
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"
    labels: "service,version"

services:
  megaparse:
    build:
      context: ./MegaParse
      cache_from:
        - megaparse:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "5001:5000"
    restart: always
    container_name: megaparse_service

  weaviate:
    image: semitechnologies/weaviate:1.25.4
    ports:
      - "8080:8080"
    restart: on-failure
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      DEFAULT_VECTORIZER_MODULE: "none"
      CLUSTER_HOSTNAME: "node1"
      PERSISTENCE_DATA_PATH: "./data"
    container_name: weaviate_service

  neo4j:
    image: neo4j:5.20.0
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
    container_name: neo4j_service

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=projectdb
      - POSTGRES_USER=projectuser
      - POSTGRES_PASSWORD=projectpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    container_name: postgres_service

  project-service:
    build:
      context: ./project-service
      cache_from:
        - project-service:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://projectuser:projectpass@postgres:5432/projectdb
    depends_on:
      - postgres
    container_name: project_service

  backend:
    build:
      context: ./backend
      cache_from:
        - backend:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app
      - ./logs:/app/logs
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PROJECT_SERVICE_URL=http://project-service:8000
      - REPORTING_SERVICE_URL=http://reporting-service:8000
      - WEAVIATE_URL=http://weaviate:8080
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - LLM_PROVIDER=openai
      - OBJECT_STORAGE_ENDPOINT=minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
      - LOG_LEVEL=INFO
    depends_on:
      - megaparse
      - weaviate
      - neo4j
      - project-service
    restart: on-failure
    container_name: backend_service
    logging: *default-logging

  frontend:
    build:
      context: ./frontend
      cache_from:
        - frontend:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "3000:80"
    depends_on:
      - backend
      - project-service
    restart: always
    container_name: frontend_service

  reporting-service:
    build:
      context: ./reporting-service
      cache_from:
        - reporting-service:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://projectuser:projectpass@postgres:5432/projectdb
      - PROJECT_SERVICE_URL=http://project-service:8000
      - OBJECT_STORAGE_ENDPOINT=minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    depends_on:
      - postgres
      - minio
    restart: always
    container_name: reporting_service

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    restart: always
    container_name: minio_service

volumes:
  postgres_data:
